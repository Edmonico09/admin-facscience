name: Build and Deploy Faculty of Science Website

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_IMAGE_NAME }}:latest .

      # Save Docker image as tar

      - name: Save Docker image to tar
        run: |
          mkdir -p /tmp/deploy
          docker save ${{ secrets.DOCKER_IMAGE_NAME }}:latest -o /tmp/deploy/${{ secrets.DOCKER_IMAGE_NAME }}.tar
          ls -lh /tmp/deploy/${{ secrets.DOCKER_IMAGE_NAME }}.tar
          if [ ! -s /tmp/deploy/${{ secrets.DOCKER_IMAGE_NAME }}.tar ]; then
            echo "Erreur : le fichier tar est vide ou n'a pas été créé"
            exit 1
          fi

          # Sauvegarder la clé privée dans un fichier temporaire
          echo "${{ secrets.PRIVATE_KEY }}" > /tmp/private_key
          chmod 600 /tmp/private_key

          # Copier l'image vers le serveur
          scp -o StrictHostKeyChecking=no -i /tmp/private_key /tmp/deploy/${{ secrets.DOCKER_IMAGE_NAME }}.tar \${{ secrets.USERNAME }}@${{ secrets.HOST }}:/home/mit
          scp -o StrictHostKeyChecking=no -i /tmp/private_key docker-compose.yml \${{ secrets.USERNAME }}@${{ secrets.HOST }}:/home/mit

      # Load Docker image and deploy with docker-compose
      - name: Load and deploy on server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: 22
          script: |
            cd /home/mit/${{ secrets.DOCKER_IMAGE_NAME }}
            # Charger l'image Docker
            docker load -i ${{ secrets.DOCKER_IMAGE_NAME }}.tar
            # Arrêter et supprimer l'ancien conteneur si il existe
            docker compose down || true
            # Lancer le conteneur avec docker-compose
            docker compose up -d

            #lancer le 

            # Vérifier l'état des conteneurs
            docker ps -a
